import java.util.Scanner;
import javax.swing.*;
import java.awt.*;

public class WordGameApp extends JFrame {
    private JTextArea gameLog;   // 게임 로그를 출력할 텍스트 영역
    private String startWord = "아버지";  // 시작 단어
    private String lastWord = startWord;  // 마지막 단어 추적
    private Player[] players;  // 플레이어 배열
    private int currentPlayerIndex = 0;  // 현재 플레이어 인덱스
    private Scanner sc = new Scanner(System.in);  // 콘솔 입력 스캐너

    public WordGameApp() {
        // 프레임 기본 설정
        setTitle("끝말잇기 게임");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(400, 300);
        setLayout(new BorderLayout());

        // 게임 로그 출력용 텍스트 영역 (GUI 출력용)
        gameLog = new JTextArea();
        gameLog.setEditable(false);
        add(new JScrollPane(gameLog), BorderLayout.CENTER);

        // 참가자 설정 및 게임 시작
        createPlayers();
        gameLog.append("끝말잇기 게임을 시작합니다...\n");
        gameLog.append("시작 단어는 '" + lastWord + "'입니다.\n");

        setVisible(true);
        runGame();  // 게임 실행
    }

    // 참가자 생성 메소드
    private void createPlayers() {
        System.out.print("게임에 참가하는 인원 수를 입력하세요 >> ");
        int numPlayers = sc.nextInt();  // 콘솔로 인원수 입력받기
        players = new Player[numPlayers];
        sc.nextLine();  // 개행 문자 소비

        for (int i = 0; i < numPlayers; i++) {
            System.out.print("참가자 " + (i + 1) + "의 이름을 입력하세요 >> ");
            String name = sc.nextLine();  // 콘솔로 이름 입력받기
            players[i] = new Player(name);
        }
    }

    // 게임 실행 메소드
    private void runGame() {
        while (true) {
            Player currentPlayer = players[currentPlayerIndex];  // 현재 차례의 플레이어
            System.out.print(currentPlayer.getName() + ">> ");  // 콘솔에서 단어 입력 유도
            String newWord = sc.nextLine();  // 콘솔로 새로운 단어 입력받기

            if (!currentPlayer.checkSuccess(lastWord, newWord)) {  // 끝말잇기 실패 시
                gameLog.append(currentPlayer.getName() + "가 졌습니다. 게임 종료.\n");
                break;
            }

            // 성공했을 경우 로그 업데이트
            gameLog.append(currentPlayer.getName() + "의 단어: " + newWord + "\n");
            lastWord = newWord;  // 마지막 단어 업데이트
            currentPlayerIndex = (currentPlayerIndex + 1) % players.length;  // 다음 플레이어로 이동
        }
    }

    public static void main(String[] args) {
        new WordGameApp();  // GUI와 게임 시작
    }
}

// Player 클래스
class Player {
    private String name;

    // 생성자
    Player(String name) {
        this.name = name;
    }

    // 이름 반환 메소드
    public String getName() {
        return name;
    }

    // 끝말과 앞말이 동일한지 체크하는 메소드
    public boolean checkSuccess(String lastWord, String newWord) {
        int lastIndex = lastWord.length() - 1;
        return lastWord.charAt(lastIndex) == newWord.charAt(0);  // 끝말과 앞말이 같은지 비교
    }
}
